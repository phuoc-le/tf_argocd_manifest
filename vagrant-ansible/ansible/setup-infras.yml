- name: Setup infra
  hosts: masters
  tasks:
    - name: Add ingress-nginx chart repo
      kubernetes.core.helm_repository:
        repo_state: present
        name: ingress-nginx
        repo_url: "https://kubernetes.github.io/ingress-nginx"

    - name: Deploy latest version of ingress-nginx chart inside ingress-nginx namespace with values
      kubernetes.core.helm:
        name: ingress-nginx
        chart_ref: ingress-nginx/ingress-nginx
        release_namespace: ingress-nginx
        create_namespace: true
        wait: true
        values:
          controller:
            service:
              type: ClusterIP

    - name: Patch external IP ingress-nginx-controller service
      kubernetes.core.k8s:
        state: patched
        kind: Service
        name: ingress-nginx-controller
        namespace: ingress-nginx
        definition:
          spec:
            externalIPs: [ "{{ hostvars[inventory_hostname]['ansible_host'] }}" ]

    - name: Add longhorn chart repo
      kubernetes.core.helm_repository:
        repo_state: present
        name: longhorn
        repo_url: "https://charts.longhorn.io"

    - name: Deploy latest version of longhorn chart inside ingress-nginx namespace with values
      kubernetes.core.helm:
        name: longhorn
        chart_ref: longhorn/longhorn
        chart_version: 1.6.2
        release_namespace: longhorn-system
        create_namespace: true
        wait: true

    - name: Download longhorn-nfs manifest to the cluster.
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/longhorn/longhorn/v1.6.2/deploy/prerequisite/longhorn-nfs-installation.yaml
        dest: /tmp/longhorn-nfs-installation.yaml
        mode: '0664'

    - name: Apply longhorn-nfs manifest to the cluster.
      kubernetes.core.k8s:
        state: present
        src: /tmp/longhorn-nfs-installation.yaml
        namespace: longhorn-system

    - name: Add cert-manager chart repo
      kubernetes.core.helm_repository:
        repo_state: present
        name: cert-manager
        repo_url: "https://charts.jetstack.io"

    - name: Deploy latest version of cert-manager chart inside cert-manager namespace with values
      kubernetes.core.helm:
        name: cert-manager
        chart_ref: cert-manager/cert-manager
        release_namespace: cert-manager
        create_namespace: true
        values:
          crds:
            enabled: true

    - name: Create a ClusterIssuer cert-manager
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: selfsigned-cluster-issuer
          spec:
            selfSigned: {}

    - name: Create a Certificate cert-manager
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: phucninh-selfsigned-ca
            namespace: cert-manager
          spec:
            isCA: true
            commonName: phucninh-selfsigned-ca
            secretName: phucninh-ca-secret
            privateKey:
              algorithm: ECDSA
              size: 256
            issuerRef:
              name: selfsigned-cluster-issuer
              kind: ClusterIssuer
              group: cert-manager.io

    - name: Create a Secret cert-manager
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: phucninh-ca-secret
            namespace: cert-manager
          data:
            ca.crt: >-
              LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lRSDkwUXlRVWxtYmxoMTJJVDdOdXFFakFLQmdncWhrak9QUVFEQWpBbE1TTXcKSVFZRFZRUURFeHB3YUhWamJtbHVhQzF3Y204dGMyVnNabk5wWjI1bFpDMWpZVEFlRncweU5EQTJNRE14TWpRMgpOREJhRncweU5EQTVNREV4TWpRMk5EQmFNQ1V4SXpBaEJnTlZCQU1UR25Cb2RXTnVhVzVvTFhCeWJ5MXpaV3htCmMybG5ibVZrTFdOaE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUxOU081K2VzTk1HazRvTzYKaGQyYW53QTBXQndROG14djVjMmhhc3ZVUnRPcG1EV3FwVXc0eFNYMzBqREJpSVZpOWY0Yyt0ajBjSnpYRVRPYgpEUVJOd3FOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGRlJxUmthYVNHenk3MjJzd1hsam8xcVFpVDVXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhyQWhPeXAKQkRzU2pQNWNwaGdScTJibzczaDdUSG45d3puNVZraXFDWGFtQWlFQTFadjVYbkZQeWFYc2MyM1VkaXl2d2Z3eAp3TG5GTHJtdTAxVWJSSVo3a0IwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
            tls.crt: >-
              LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lRSDkwUXlRVWxtYmxoMTJJVDdOdXFFakFLQmdncWhrak9QUVFEQWpBbE1TTXcKSVFZRFZRUURFeHB3YUhWamJtbHVhQzF3Y204dGMyVnNabk5wWjI1bFpDMWpZVEFlRncweU5EQTJNRE14TWpRMgpOREJhRncweU5EQTVNREV4TWpRMk5EQmFNQ1V4SXpBaEJnTlZCQU1UR25Cb2RXTnVhVzVvTFhCeWJ5MXpaV3htCmMybG5ibVZrTFdOaE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUxOU081K2VzTk1HazRvTzYKaGQyYW53QTBXQndROG14djVjMmhhc3ZVUnRPcG1EV3FwVXc0eFNYMzBqREJpSVZpOWY0Yyt0ajBjSnpYRVRPYgpEUVJOd3FOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGRlJxUmthYVNHenk3MjJzd1hsam8xcVFpVDVXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUhyQWhPeXAKQkRzU2pQNWNwaGdScTJibzczaDdUSG45d3puNVZraXFDWGFtQWlFQTFadjVYbkZQeWFYc2MyM1VkaXl2d2Z3eAp3TG5GTHJtdTAxVWJSSVo3a0IwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
            tls.key: >-
              LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUxWR3lyUkNQVXc5bjVvUjlUM3A4ZThwZG9hcjVvTTZwQ2txcGFSWmtpMnJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFTE5TTzUrZXNOTUdrNG9PNmhkMmFud0EwV0J3UThteHY1YzJoYXN2VVJ0T3BtRFdxcFV3NAp4U1gzMGpEQmlJVmk5ZjRjK3RqMGNKelhFVE9iRFFSTndnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
          type: kubernetes.io/tls

    - name: Create a ClusterIssuer CA cert-manager
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: phucninh-ca-issuer
          spec:
            ca:
              secretName: phucninh-ca-secret

    - name: Add argo-cd chart repo
      kubernetes.core.helm_repository:
        repo_state: present
        name: argo
        repo_url: "https://argoproj.github.io/argo-helm"

    - name: Deploy latest version of argo chart inside argocd namespace with values
      kubernetes.core.helm:
        name: argocd
        chart_ref: argo/argo-cd
        release_namespace: argocd
        chart_version: 7.2.0
        create_namespace: true
        values:
          global:
            domain: argocd.phucninh.pro
          configs:
            params:
              server.insecure: true
          server:
            ingress:
              enabled: true
              controller: generic
              labels: {}
              annotations:
                nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
                nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
                cert-manager.io/cluster-issuer: "selfsigned-cluster-issuer"
              ingressClassName: "nginx"
              hostname: "argo-cd.phucninh.pro"
              path: /
              pathType: Prefix
              tls: true

    - name: Create infra namespace
      kubernetes.core.k8s:
        name: infra
        api_version: v1
        kind: Namespace
        state: present

    - name: Create a ClusterRole jenkins
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: jenkins
          rules:
            - apiGroups: [ "*" ]
              resources: [ "*" ]
              verbs: [ "*" ]
            - apiGroups: [ "" ]
              resources: [ "*" ]
              verbs: [ "*" ]

    - name: Create a ClusterRoleBinding jenkins
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: jenkins
          subjects:
            - kind: ServiceAccount
              name: jenkins
              namespace: infra
          roleRef:
            kind: ClusterRole
            name: jenkins
            apiGroup: rbac.authorization.k8s.io

    - name: Create a jenkins by argocd
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: jenkins
            namespace: argocd
          spec:
            project: default
            source:
              chart: "jenkins"
              repoURL: "https://charts.jenkins.io"  # note: the oci:// syntax is not included.
              targetRevision: 5.1.23
              helm:
                valuesObject:
                  controller:
                    image:
                      tag: latest-jdk17
                      pullPolicy: IfNotPresent
                    jenkinsAdminEmail: admin@phucninh.pro
                    jenkinsUrl: https://jenkins.phucninh.pro/
                    admin:
                      username: admin
                      password: "123456"
                    installPlugins:
                      - kubernetes:4246.v5a_12b_1fe120e
                      - workflow-aggregator:596.v8c21c963d92d
                      - git:5.2.2
                      - configuration-as-code:1810.v9b_c30a_249a_4c
                      - kubernetes-cli:1.12.1
                  persistence:
                    size: 2Gi
                  agent:
                    enabled: true
                    defaultsProviderTemplate: jenkins-agent-deploy
                    jenkinsUrl:
                    jenkinsTunnel:
                    kubernetesConnectTimeout: 5
                    kubernetesReadTimeout: 15
                    maxRequestsPerHostStr: "32"
                    retentionTimeout: 5
                    waitForPodSec: 600
                    namespace: infra
                    podLabels: {}
                    jnlpregistry:
                    image:
                      repository: "phuoc/jenkins-agent-kubernetes"
                      tag: "latest"
                    workingDir: "/home/jenkins/agent"
                    nodeUsageMode: "NORMAL"
                    customJenkinsLabels: []
                    imagePullSecretName:
                    componentName: "jenkins-agent"
                    websocket: false
                    directConnection: false
                    privileged: false
                    runAsUser:
                    runAsGroup:
                    hostNetworking: false
                    resources:
                      requests:
                        cpu: "512m"
                        memory: "512Mi"
                      limits:
                        cpu: "2"
                        memory: "2Gi"
                    livenessProbe: {}
                    alwaysPullImage: false
                    restrictedPssSecurityContext: false
                    podRetention: "Never"
                    showRawYaml: false
                    volumes: []
                    workspaceVolume: {}
                    envVars: []
                    secretEnvVrs: []
                    nodeSelector: {}
                    command:
                    args: "${computer.jnlpmac} ${computer.name}"
                    sideContainerName: "jnlp"
                    TTYEnabled: false
                    containerCap: 10
                    podName: "jenkins-agent"
                    idleMinutes: 0
                    yamlTemplate: ""
                    yamlMergeStrategy: "override"
                    inheritYamlMergeStrategy: false
                    connectTimeout: 100
                    annotations: {}
                    additionalontainers: []
                    disableDefaultAgent: true
                    podTemplates:
                      jenkins-agent-deploy: |
                        - name: jenkins-agent-deploy
                          label: deploy
                          serviceAccount: jenkins
                          namespace: infra
                          containers:
                          - name: jnlp
                            image: phuoc/jenkins-agent-kubernetes:v1.0.0
                            command:
                            args: "^${computer.jnlpmac} ^${computer.name}"
                            envVars:
                            - envVar:
                                key: "JENKINS_URL"
                                value: "http://jenkins.infra.svc.cluster.local:8080/"
                            ttyEnabled: false
                            privileged: false
                            resourceRequestCpu: "200m"
                            resourceRequestMemory: "512Mi"
                            resourceLimitCpu: "1"
                            resourceLimitMemory: "2Gi"
            destination:
              server: https://kubernetes.default.svc
              namespace: infra
            syncPolicy:
              syncOptions:
                - CreateNamespace=true
              automated:
                prune: true

    - name: Create a mariadb by argocd
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: mariadb
            namespace: argocd
          spec:
            project: default
            source:
              chart: mariadb
              repoURL: registry-1.docker.io/bitnamicharts
              targetRevision: 18.2.0
              helm:
                parameters:
                  - name: "fullnameOverride"
                    value: "mariadb"
                  - name: "image.tag"
                    value: '11.3.2'
                  - name: "auth.rootPassword"
                    value: "123456"
                    forceString: true
                  - name: "auth.username"
                    value: "superuser"
                  - name: "auth.password"
                    value: "123456"
                    forceString: true
                  - name: "auth.database"
                    value: "test"
                  - name: "primary.persistence.size"
                    value: 1Gi
                  - name: "readReplicas.persistence.size"
                    value: 1Gi
                valuesObject:
                  initdbScripts:
                    init.sql: |
                      CREATE USER app identified by '123456';
                      CREATE DATABASE `phucninh-blog`;
                      GRANT ALL PRIVILEGES ON `phucninh-blog`.* TO 'app'@'%';
                      CREATE DATABASE `strapi`;
                      GRANT ALL PRIVILEGES ON `strapi`.* TO 'app'@'%';
                      CREATE DATABASE `laravel`;
                      GRANT ALL PRIVILEGES ON `laravel`.* TO 'app'@'%';
                      FLUSH PRIVILEGES;
            destination:
              server: https://kubernetes.default.svc
              namespace: infra
            syncPolicy:
              syncOptions:
                - CreateNamespace=true
              automated:
                prune: true

    - name: Patch external IP Mariadb service
      kubernetes.core.k8s:
        state: patched
        kind: Service
        name: mariadb
        namespace: infra
        definition:
          spec:
            externalIPs: [ "{{ hostvars[inventory_hostname]['ansible_host'] }}" ]

    - name: Create a phucninh-blog by argocd
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: phucninh-blog
            namespace: argocd
          spec:
            project: default
            source:
              repoURL: registry-1.docker.io/bitnamicharts
              targetRevision: 22.4.11
              helm:
                parameters:
                  - name: fullnameOverride
                    value: 'phucninh-blog'
                  - name: image.tag
                    value: '6.5.4'
                  - name: wordpressUsername
                    value: 'admin'
                  - name: wordpressPassword
                    value: '123456'
                    forceString: true
                  - name: wordpressEmail
                    value: 'admin@phucninh.me'
                  - name: wordpressFirstName
                    value: 'Phuc'
                  - name: wordpressLastName
                    value: 'Ninh'
                  - name: wordpressBlogName
                    value: "Phuc Ninh's Blog"
                  - name: service.type
                    value: 'ClusterIP'
                  - name: persistence.size
                    value: '3Gi'
                  - name: mariadb.enabled
                    value: 'false'
                  - name: externalDatabase.host
                    value: 'mariadb.infra'
                  - name: externalDatabase.port
                    value: '3306'
                  - name: externalDatabase.user
                    value: 'app'
                  - name: externalDatabase.password
                    value: '123456'
                    forceString: true
                  - name: externalDatabase.database
                    value: 'phucninh-blog'
              chart: wordpress
            destination:
              server: 'https://kubernetes.default.svc'
              namespace: default
            syncPolicy:
              syncOptions:
                - CreateNamespace=true
              automated:
                prune: true

    - name: Create a postgres by argocd
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: postgres
            namespace: argocd
          spec:
            project: default
            source:
              chart: postgresql
              repoURL: registry-1.docker.io/bitnamicharts  # note: the oci:// syntax is not included.
              targetRevision: 15.4.0
              helm:
                parameters:
                  - name: "fullnameOverride"
                    value: "postgres"
                  - name: "image.tag"
                    value: '16.3.0'
                  - name: "global.auth.postgresPassword"
                    value: "123456"
                    forceString: true
                  - name: "global.auth.username"
                    value: "superuser"
                  - name: "global.auth.password"
                    value: "123456"
                    forceString: true
                  - name: "global.auth.database"
                    value: "test"
                  - name: "auth.postgresPassword"
                    value: "123456"
                    forceString: true
                  - name: "auth.username"
                    value: "superuser"
                  - name: "auth.password"
                    value: "123456"
                    forceString: true
                  - name: "auth.database"
                    value: "test"
                  - name: "primary.persistence.size"
                    value: 1Gi
                  - name: "readReplicas.persistence.size"
                    value: 1Gi
            destination:
              server: https://kubernetes.default.svc
              namespace: infra
            syncPolicy:
              syncOptions:
                - CreateNamespace=true
              automated:
                prune: true

    - name: Patch external IP Postgres service
      kubernetes.core.k8s:
        state: patched
        kind: Service
        name: postgres
        namespace: infra
        definition:
          spec:
            externalIPs: [ "{{ hostvars[inventory_hostname]['ansible_host'] }}" ]

    - name: Create a redis by argocd
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: redis
            namespace: argocd
          spec:
            project: default
            source:
              chart: redis
              repoURL: registry-1.docker.io/bitnamicharts  # note: the oci:// syntax is not included.
              targetRevision: 19.5.5
              helm:
                parameters:
                  - name: "fullnameOverride"
                    value: "redis"
                  - name: "image.tag"
                    value: '7.2.5'
                  - name: "architecture"
                    value: "standalone"
                  - name: "master.persistence.size"
                    value: 1Gi
                  - name: "auth.enabled"
                    value: "false"
            destination:
              server: https://kubernetes.default.svc
              namespace: infra
            syncPolicy:
              syncOptions:
                - CreateNamespace=true
              automated:
                prune: true

    - name: Patch external IP Redis service
      kubernetes.core.k8s:
        state: patched
        kind: Service
        name: redis-master
        namespace: infra
        definition:
          spec:
            externalIPs: [ "{{ hostvars[inventory_hostname]['ansible_host'] }}" ]

    - name: Create a strapi by argocd
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: strapi
            namespace: argocd
          spec:
            project: default
            source:
              path: strapi-chart
              repoURL: https://github.com/phuoc-le/tf_argocd_manifest.git
              targetRevision: HEAD
              helm:
                parameters:
                  - name: "image.repository"
                    value: "phuoc/strapi"
                  - name: "image.pullPolicy"
                    value: "IfNotPresent"
                  - name: "image.tag"
                    value: "latest"
                  - name: "env.configmap.DATABASE_CLIENT"
                    value: "mysql2"
                  - name: "env.configmap.DATABASE_HOST"
                    value: "mariadb.infra"
                  - name: "env.configmap.DATABASE_NAME"
                    value: "strapi"
                  - name: "env.configmap.DATABASE_PORT"
                    value: "3306"
                    forceString: true
                  - name: "env.secrets.DATABASE_USERNAME"
                    value: "app"
                    forceString: true
                  - name: "env.secrets.DATABASE_PASSWORD"
                    value: "123456"
                    forceString: true
            destination:
              namespace: default
              server: https://kubernetes.default.svc
            syncPolicy:
              syncOptions:
                - CreateNamespace=true
              automated:
                prune: true

    - name: Create a vault by argocd
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: vault
            namespace: argocd
          spec:
            project: default
            source:
              chart: vault
              helm:
                releaseName: vault
                parameters:
                  - name: "server.dataStorage.size"
                    value: "1Gi"
                  - name: "server.dev.enabled"
                    value: "false"
                  - name: "server.dev.devRootToken"
                    value: "root"
                  - name: "csi.enabled"
                    value: "false"
              repoURL: https://helm.releases.hashicorp.com
              targetRevision: 0.28.0
            destination:
              namespace: infra
              server: https://kubernetes.default.svc
            syncPolicy:
              syncOptions:
                - CreateNamespace=true
              automated:
                prune: true

    - name: Create a redisinsight by argocd
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: redis-insight
            namespace: argocd
          spec:
            project: default
            source:
              path: redis-insight/chart
              repoURL: https://github.com/phuoc-le/tf_argocd_manifest.git
              targetRevision: HEAD
              helm:
                parameters:
                  - name: "environment.RITRUSTEDORIGINS"
                    value: "https://redis-insight.phucninh.pro"
            destination:
              namespace: infra
              server: https://kubernetes.default.svc
            syncPolicy:
              syncOptions:
                - CreateNamespace=true
              automated:
                prune: true

    - name: Create a meilisearch by argocd
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: meilisearch
            namespace: argocd
          spec:
            project: default
            source:
              chart: meilisearch
              helm:
                releaseName: meilisearch
                parameters:
                  - name: "persistence.enabled"
                    value: "true"
                  - name: "persistence.storageClass"
                    value: "longhorn"
                  - name: "persistence.size"
                    value: "1Gi"
                  - name: "environment.MEILI_ENV"
                    value: "production"
              repoURL: https://meilisearch.github.io/meilisearch-kubernetes
              targetRevision: 0.7.0
            destination:
              namespace: infra
              server: https://kubernetes.default.svc
            syncPolicy:
              syncOptions:
                - CreateNamespace=true
              automated:
                prune: true

    - name: Patch external IP meilisearch service
      kubernetes.core.k8s:
        state: patched
        kind: Service
        name: meilisearch
        namespace: infra
        definition:
          spec:
            externalIPs: [ "{{ hostvars[inventory_hostname]['ansible_host'] }}" ]

    - name: Create a Ingress Infra
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: phucninh-ingress
            namespace: infra
            annotations:
              cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
              nginx.ingress.kubernetes.io/ssl-redirect: 'true'
          spec:
            ingressClassName: nginx
            tls:
              - hosts:
                  - jenkins.phucninh.pro
                secretName: jenkins-phucninh-pro-tls
              - hosts:
                  - pga.phucninh.pro
                secretName: pga-phucninh-pro-tls
              - hosts:
                  - minio.phucninh.pro
                secretName: minio-phucninh-pro-tls
              - hosts:
                  - redis-insight.phucninh.pro
                secretName: redis-insight-phucninh-pro-tls
              - hosts:
                  - vault.phucninh.pro
                secretName: vault-phucninh-pro-tls
              - hosts:
                  - activemq.phucninh.pro
                secretName: activemq-phucninh-pro-tls
              - hosts:
                  - meilisearch.phucninh.pro
                secretName: meilisearch-phucninh-pro-tls
            rules:
              - host: jenkins.phucninh.pro
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: jenkins
                          port:
                            number: 8080
              - host: pga.phucninh.pro
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: pgadmin4
                          port:
                            number: 80
              - host: minio.phucninh.pro
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: console
                          port:
                            number: 9090
              - host: activemq.phucninh.pro
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: activemq
                          port:
                            number: 8161
              - host: meilisearch.phucninh.pro
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: meilisearch
                          port:
                            number: 7700
              - host: redis-insight.phucninh.pro
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: redis-insight
                          port:
                            number: 5540
              - host: vault.phucninh.pro
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: vault
                          port:
                            number: 8200
              - host: rabbitmq.phucninh.pro
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: rabbitmq
                          port:
                            number: 15672
              - host: ldapadmin.phucninh.pro
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: openldap-phpldapadmin
                          port:
                            number: 80

    - name: Create a Ingress Default
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: phucninh-ingress
            namespace: default
            annotations:
              cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
              nginx.ingress.kubernetes.io/ssl-redirect: 'true'
          spec:
            ingressClassName: nginx
            tls:
              - hosts:
                  - dev.phucninh.pro
                secretName: dev-phucninh-pro-tls
              - hosts:
                  - blog.phucninh.pro
                secretName: blog-phucninh-pro-tls
              - hosts:
                  - api.phucninh.pro
                secretName: api-phucninh-pro-tls
            rules:
              - host: dev.phucninh.pro
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: nginx
                          port:
                            number: 80
              - host: api.phucninh.pro
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: strapi
                          port:
                            number: 1337
              - host: blog.phucninh.pro
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: phucninh-blog
                          port:
                            number: 80

    - name: Wait till vault is created
      kubernetes.core.k8s_info:
        kind: Pod
        wait: yes
        name: vault-0
        namespace: infra
        wait_sleep: 10
        wait_timeout: 60
      register: vault_pod_info
      ignore_errors: True

    - name: Init token vault
      kubernetes.core.k8s_exec:
        namespace: infra
        pod: vault-0
        command: vault operator init
      ignore_errors: True
      register: command_status
      when: vault_pod_info.failed == true

    - name: Check last command status
      debug:
        msg: "{{ command_status.stdout_lines }}"
      when:
        - vault_pod_info.failed == true
        - command_status.rc == 0
