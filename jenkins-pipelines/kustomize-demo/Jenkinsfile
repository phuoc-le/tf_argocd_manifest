pipeline {

    agent { node { label 'deploy' } }
    parameters {
        choice(name: 'MODE', choices: ['DEPLOY', 'DELETE'], description: '')
        choice(name: 'BUILD_ENV', choices: ['dev', 'sit', 'prd', 'uat'], description: '')
        string(name: 'SERVICE_NAME', defaultValue: 'demo-kustomize', description: '')
        string(name: 'NAMESPACE', defaultValue: 'default', description: '')
        string(name: 'BRANCH', defaultValue: 'main', description: '')
    }
    options {
        buildDiscarder(logRotator(daysToKeepStr: '30', numToKeepStr: '5'))
        disableResume()
    }
    environment {
        BUILD_ENV = "$params.BUILD_ENV"
        SERVICE_NAME = "$params.SERVICE_NAME"
        PORT = 80
        NAMESPACE = "$params.NAMESPACE"
        BRANCH = "$params.BRANCH"
        GIT_REPO_URL = 'https://github.com/phuoc-le/tf_argocd_manifest.git'
        CREDENTIALS_ID = 'github'
    }

    stages {
        stage('Checkout') {
            steps {
                echo "Checkout git repository..."
                script {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: "$BRANCH"]],
                        userRemoteConfigs: [[credentialsId: "", url: "$GIT_REPO_URL"]]
                    ])
                }
            }
        }
        stage('Deploy') {
            when {
                anyOf {
                    environment name: 'MODE', value: 'DEPLOY'
                }
            }
            steps {
                echo "Start deploying $SERVICE_NAME...."
                script {
                    withKubeConfig([namespace: "$NAMESPACE"]) {
                        sh 'cd kustomize/${SERVICE_NAME} && kubectl apply -k overlays/${BUILD_ENV}'
                    }
                }
                echo "Finish deploying $SERVICE_NAME...."
            }
        }
        stage('Delete') {
            when {
                anyOf {
                    environment name: 'MODE', value: 'DELETE'
                }
            }
            steps {
                echo "Start deleting $SERVICE_NAME...."
                script {
                    withKubeConfig([namespace: "$NAMESPACE"]) {
                        sh 'cd kustomize/${SERVICE_NAME} && kustomize build overlays/${BUILD_ENV} | kubectl delete -f -'
                    }
                }
                echo "Finish deleting $SERVICE_NAME...."
            }
        }
    }

}